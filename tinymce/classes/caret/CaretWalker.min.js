define("tinymce/caret/CaretWalker",["tinymce/dom/NodeType","tinymce/caret/CaretCandidate","tinymce/caret/CaretPosition","tinymce/caret/CaretUtils","tinymce/util/Arr","tinymce/util/Fun"],function(d,s,a,t,f,c){var r=d.isContentEditableFalse,i=d.isText,n=d.isElement,e=d.isBr,b=t.isForwards,p=t.isBackwards,j=s.isCaretCandidate,g=s.isAtomic,o=s.isEditableCaretCandidate;function h(w,u){var v=[];while(w&&w!=u){v.push(w);w=w.parentNode}return v}function q(u,v){if(u.hasChildNodes()&&v<u.childNodes.length){return u.childNodes[v]}return null}function l(v,u){if(b(v)){if(j(u.previousSibling)&&!i(u.previousSibling)){return a.before(u)}if(i(u)){return a(u,0)}}if(p(v)){if(j(u.nextSibling)&&!i(u.nextSibling)){return a.after(u)}if(i(u)){return a(u,u.data.length)}}if(p(v)){if(e(u)){return a.before(u)}return a.after(u)}return a.before(u)}function k(w,u){var v;if(!d.isBr(w)){return false}v=m(1,a.after(w),u);if(!v){return false}return !t.isInSameBlock(a.before(w),a.before(v),u)}function m(C,B,v){var u,y,w,x,D,z,A;if(!n(v)||!B){return null}A=B;u=A.container();y=A.offset();if(i(u)){if(p(C)&&y>0){return a(u,--y)}if(b(C)&&y<u.length){return a(u,++y)}w=u}else{if(p(C)&&y>0){x=q(u,y-1);if(j(x)){if(!g(x)){D=t.findNode(x,C,o,x);if(D){if(i(D)){return a(D,D.data.length)}return a.after(D)}}if(i(x)){return a(x,x.data.length)}return a.before(x)}}if(b(C)&&y<u.childNodes.length){x=q(u,y);if(j(x)){if(k(x,v)){return m(C,a.after(x),v)}if(!g(x)){D=t.findNode(x,C,o,x);if(D){if(i(D)){return a(D,0)}return a.before(D)}}if(i(x)){return a(x,0)}return a.after(x)}}w=A.getNode()}if((b(C)&&A.isAtEnd())||(p(C)&&A.isAtStart())){w=t.findNode(w,C,c.constant(true),v,true);if(o(w)){return l(C,w)}}x=t.findNode(w,C,o,v);z=f.last(f.filter(h(u,v),r));if(z&&(!x||!z.contains(x))){if(b(C)){A=a.after(z)}else{A=a.before(z)}return A}if(x){return l(C,x)}return null}return function(u){return{next:function(v){return m(1,v,u)},prev:function(v){return m(-1,v,u)}}}});